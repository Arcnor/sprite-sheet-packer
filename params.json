{"name":"SpriteSheet Packer","tagline":"Create you sprite atlas with GUI or command line tools.","body":"# Overview\r\nSpriteSheet Packer is a GUI and command line tool to create sprite sheets.\r\n\r\nSupported operating systems: MacOS, Windows and other [QT supported platform](http://doc.qt.io/qt-5/supported-platforms.html).\r\n\r\n# Licensing\r\nSpriteSheet Packer is MIT license, open source project intended to help the beginning developers.\r\nUses QT with LGPL license.\r\n\r\n# Installation\r\nDownload pre-build [release](https://github.com/amakaseev/sprite-sheet-packer/releases) version.\r\n\r\nFollow this steps for compile from sources:\r\n* Download and install [QT with Qt Creater](http://www.qt.io/ru/download-open-source/)\r\n* Clone sources from https://github.com/amakaseev/sprite-sheet-packer\r\n* Open sprite-sheet-packer.pro, compile and run SpriteSheetPacker.\r\n\r\n# Usage\r\n## GUI\r\n![SpriteSheetPacker](screens/main.png)\r\n### Creating your first sprite sheet\r\n* Run **SpriteSheetPacker** with out arguments\r\n* Press **Add sprites** or **Add smart folder** on toolbar or menu\r\n* Set **Destination** folder in Output group on Property ![destination](screens/destination.png)\r\n* Enter sprite sheet name ![sprite-sheet-name](screens/sprite-sheet-name.png)\r\n* Press **Publish sprite sheet** on toolbar or menu \r\n![publish](screens/publish.png)\r\n\r\n## Command Line\r\n```\r\nUsage: SpriteSheetPacker [options] source destination\r\n```\r\nOptions                   | Description\r\n------------------------- | -------------\r\n  -h, --help              |Displays this help.\r\n  -v, --version           |Displays version information.\r\n  -f, --format <format>   |Format for export sprite sheet data. Default is cocos2d.\r\n  --texture-border <int>  |Border of the sprite sheet, value adds transparent pixels around the borders of the sprite sheet. Default value is 0.\r\n  --sprite-border <int>   |Sprite border is the space between sprites. Value adds transparent pixels between sprites to avoid artifacts from neighbor sprites. The transparent pixels are not added to the sprites, default is 2.\r\n  --trim <int>            |Allowed values: 1 to 255, default is 1. Pixels with an alpha value below this value will be considered transparent when trimming the sprite. Very useful for sprites with nearly invisible alpha pixels at the borders.\r\n  --powerOf2              |Forces the texture to have power of 2 size (32, 64, 128...). Default is disable.\r\n  --max-size <size>       |Sets the maximum size for the texture, default is 8192.\r\n  --scale <float>         |Scales all images before creating the sheet. E.g. use 0.5 for half size, default is 0.5.\r\n\r\nArguments                 | Description\r\n------------------------- | -------------\r\nsource                    |Source folder with sprites for packing.\r\ndestination               |Destination folder where saving the sprite sheet.\r\n*Example*\r\n```\r\n$ SpriteSheetPacker /alekseymakaseev/Character /alekseymakaseev/testResources --trim 2 --scale 0.5\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}